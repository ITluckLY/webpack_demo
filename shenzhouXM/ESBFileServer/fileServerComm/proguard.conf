# ----------------------------------
#  通过指定数量的优化能执行
#  -optimizationpasses n
# ----------------------------------
-optimizationpasses 3

# ----------------------------------
#   混淆时不会产生形形色色的类名
#   -dontusemixedcaseclassnames
# ----------------------------------
-dontusemixedcaseclassnames

# ----------------------------------
#      指定不去忽略非公共的库类
#  -dontskipnonpubliclibraryclasses
# ----------------------------------
#-dontskipnonpubliclibraryclasses

# ----------------------------------
#       不预校验
#    -dontpreverify
# ----------------------------------
#-dontpreverify

# ----------------------------------
#      输出生成信息
#       -verbose
# ----------------------------------
-verbose

-dontwarn

#混淆时应用侵入式重载
-overloadaggressively

#优化时允许访问并修改有修饰符的类和类的成员
#-allowaccessmodification

#确定统一的混淆类的成员名称来增加混淆
-useuniqueclassmembernames


#这里添加你不需要混淆的类
#-keep public class * extends javax.servlet.Servlet {*;}
-keep public class org.** {*;}
-keep public class sun.** {*;}
-keep public class com.dcfs.esc.ftp.comm.dto.** {*;}


#----------不混淆指定的包名--------------
-keep class com.dcfs.**
#-keepclasseswithmembers class com.dcfs.**

# ---------保护方法中的属性名称----------
#-keepattributes **

#-keepnames class * implements java.io.Serializable
# ---------保护所有实体中的字段名称----------
-keepclassmembers class * implements java.io.Serializable {
    <fields>;
}

-keepclassmembers class * {
    public <fields>;
    protected <fields>;
}

# --------- 保护类中的所有方法名 ------------
-keepclassmembers class * {
	public <methods>;
	protected <methods>;
}

#java.lang.ClassFormatError: LVTT entry for 'xx' in class file xx does not match any LVT entry
#这个貌似是Proguard的bug,使用下面的代码解决
-optimizations !code/allocation/variable

#------保留属性--------
#保留签名
-keepattributes Signature
#保留注解
-keepattributes *Annotation*
#保留异常
-keepattributes Exceptions

#忽略警告
-ignorewarnings