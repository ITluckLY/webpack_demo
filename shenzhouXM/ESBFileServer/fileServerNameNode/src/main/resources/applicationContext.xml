<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
       default-lazy-init="true">

    <context:property-placeholder location="classpath:/efs.properties,classpath:/efs-local.properties"
                                  ignore-resource-not-found="true" ignore-unresolvable="true" local-override="true"/>

    <context:component-scan base-package="com.dcfs.esb.ftp">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <aop:aspectj-autoproxy/>
    <context:annotation-config/>

    <!--数据源加密操作-->
    <bean id="dbPasswordCallback" class="com.dcfs.esb.ftp.namenode.spring.config.DBPasswordCallback" lazy-init="true"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="filters" value="${connection_pools.filters}"/>
        <property name="initialSize" value="${connection_pools.initial_pool_size}"/>
        <property name="maxActive" value="${connection_pools.max_pool_size}"/>
        <property name="maxWait" value="${connection_pools.max_Wait}"/>
        <property name="minIdle" value="${connection_pools.min_idle_time}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${connection_pools.time_Between_Eviction_Runs_Millis}"/>
        <property name="minEvictableIdleTimeMillis" value="${connection_pools.min_Evictable_IdleTime_Millis}"/>

        <property name="validationQuery" value="${connection_pools.validationQuery}"/>
        <property name="testWhileIdle" value="${connection_pools.testWhileIdle}"/>
        <property name="testOnBorrow" value="${connection_pools.testOnBorrow}"/>
        <property name="testOnReturn" value="${connection_pools.testOnReturn}"/>
        <property name="poolPreparedStatements" value="${connection_pools.poolPreparedStatements}"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${connection_pools.maxPoolPreparedStatementPerConnectionSize}"/>
        <property name="passwordCallback" ref="dbPasswordCallback"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- property name="persistenceXmlLocation" value="classpath*:/persistence.xml" / -->
        <!-- property name="persistenceUnitName" value="persistenceUnit" / -->
        <property name="packagesToScan" value="com.dcfs.esb.ftp.spring.core.entity,com.dcfs.esb.ftp.namenode.spring.core.entity"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true"/>
                <property name="generateDdl" value="false"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
                <prop key="hibernate.connection.isolation">3</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
                <prop key="hibernate.search.autoregister_listeners">true</prop>
                <prop key="hibernate.search.default.directory_provider">org.hibernate.search.store.FSDirectoryProvider
                </prop>
                <prop key="hibernate.search.default.indexBase">${java.io.tmpdir}/${system.project_name}/index</prop>
                <!-- 在控制台打印SQL语句 -->
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">true</prop>
                <!-- Hiberante将为SQL产生注释，这样更利于调试-->
                <prop key="hibernate.use_sql_comments">true</prop>
                <!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
                <!--for mysql no sequence-->
                <prop key="hibernate.id.new_generator_mappings">false</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <jpa:repositories base-package="com.dcfs.esb.ftp.spring.core.repository,com.dcfs.esb.ftp.namenode.spring.core.repository"
                      entity-manager-factory-ref="entityManagerFactory"
                      transaction-manager-ref="transactionManager"/>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="java.lang.System"/>
        <property name="targetMethod" value="setProperty"/>
        <property name="arguments">
            <list>
                <value>system.project_name</value>
                <value>${system.project_name}</value>
            </list>
        </property>
    </bean>
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="java.lang.System"/>
        <property name="targetMethod" value="setProperty"/>
        <property name="arguments">
            <list>
                <value>ESB_FS_CFG_PATH</value>
                <value>${ESB_FS_CFG_PATH}</value>
            </list>
        </property>
    </bean>


    <!--<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="cacheSeconds" value="${message.cache_seconds}"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
        <property name="basenames">
            <list>
                <value>${message.common_path}</value>
                <value>${message.website_path}</value>
                <value>${message.admin_path}</value>
            </list>
        </property>
    </bean>
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>
    -->
    <bean id="nodeCfgSyncService" class="com.dcfs.esb.ftp.namenode.service.NodeCfgSyncService"/>
    <bean id="nodeCfgDocService" class="com.dcfs.esb.ftp.namenode.service.NodeCfgDocService"/>

    <bean id="bizFileServiceFactory" class="com.dcfs.esb.ftp.namenode.factory.BizFileServiceFactory"/>
    <bean id="nodeSyncServiceFactory" class="com.dcfs.esb.ftp.namenode.factory.NodeSyncServiceFactory"/>
    <bean id="nodesServiceFactory" class="com.dcfs.esb.ftp.namenode.factory.NodesServiceFactory"/>
</beans>